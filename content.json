{"meta":{"title":"tomfriwel's blog","subtitle":null,"description":null,"author":"tomfriwel","url":"https://tomfriwel.github.io/hexotest"},"pages":[{"title":"About Me","date":"2018-05-08T09:43:49.000Z","updated":"2018-05-08T09:51:53.919Z","comments":true,"path":"about/index.html","permalink":"https://tomfriwel.github.io/hexotest/about/index.html","excerpt":"","text":""}],"posts":[{"title":"image test","slug":"image-test-1","date":"2018-05-08T05:44:11.000Z","updated":"2018-05-08T05:44:11.176Z","comments":true,"path":"2018/05/08/image-test-1/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/image-test-1/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"image test","slug":"image-test","date":"2018-05-08T05:43:49.000Z","updated":"2018-05-08T09:33:16.322Z","comments":true,"path":"2018/05/08/image-test/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/image-test/","excerpt":"","text":"","categories":[],"tags":[{"name":"摄影","slug":"摄影","permalink":"https://tomfriwel.github.io/hexotest/tags/摄影/"},{"name":"生活","slug":"生活","permalink":"https://tomfriwel.github.io/hexotest/tags/生活/"},{"name":"绘画","slug":"绘画","permalink":"https://tomfriwel.github.io/hexotest/tags/绘画/"}]},{"title":"t20","slug":"t20","date":"2018-05-08T05:29:34.000Z","updated":"2018-05-08T05:44:36.661Z","comments":true,"path":"2018/05/08/t20/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/t20/","excerpt":"","text":"准备$ brew update update [–merge] [–force]: 使用git从GitHub获取最新版本的Homebrew和所有formula，并执行任何必要的迁移。 $ brew install carthage install formula: 安装 formula 很慢，后来用科学上网后快很多。 $ carthage version \b装好后查看版本 添加库在你的\b项目根目录下创建一个名为Cartfile的文件，并添加要用的第三方库，比如使用Alamofire: project/Cartfile:1github &quot;Alamofire/Alamofire&quot; ~&gt; 4.7 $ carthage update 获取（fetch）并构建（build）您列出的每个框架。 执行命令后，Carthage 会拉取库文件进行编译，会在 project/Carthage/Build 目录下生成不同平台的Alamofire.framework文件。 Carthage 不像 Cocoapods 会自动帮你做好\b连接配置，需要手动添加，因为一个一个将*.framework文件添加到 Build Phases&gt;Link Binary With Libaries 里很麻烦， 所以这里推荐把\b相应库目录添加到 Build Settings&gt;Framework Search Paths 里，比如我使用的是iOS版，那么添加一个： 1$(PROJECT_DIR)/Carthage/Build/iOS 上面设置是看别人博客\b\b进行配置的，但是一运行，就会报错： 123dyld: Library not loaded: @rpath/Alamofire.framework/Alamofire Referenced from: /var/containers/Bundle/Application/xxx/SwiftDemo.app/SwiftDemo Reason: image not found 后来查找了这个错误，\b\b\b发现添加库到 Framework Search Paths 里只是让import的时候不报错，但要保证运行的时候不报上面那个错还需要一步。 将 Alamofire.framework 添加到 General&gt;Embedded binaries 最后就可以用官方例子试用一下了： 12345678910111213Alamofire.request(\"https://httpbin.org/get\").responseJSON &#123; response in print(\"Request: \\(String(describing: response.request))\") // original url request print(\"Response: \\(String(describing: response.response))\") // http url response print(\"Result: \\(response.result)\") // response serialization result if let json = response.result.value &#123; print(\"JSON: \\(json)\") // serialized json response &#125; if let data = response.data, let utf8Text = String(data: data, encoding: .utf8) &#123; print(\"Data: \\(utf8Text)\") // original server data as UTF8 string &#125;&#125; References Carthage/Carthage 走向Carthage Homebrew dyld: Library not loaded: @rpath/Alamofire.framework/Alamofire on my iPhone(iOS8) while debuging #101 iOS app with framework crashed on device, dyld: Library not loaded, Xcode 6 Beta","categories":[],"tags":[{"name":"摄影","slug":"摄影","permalink":"https://tomfriwel.github.io/hexotest/tags/摄影/"},{"name":"生活","slug":"生活","permalink":"https://tomfriwel.github.io/hexotest/tags/生活/"}]},{"title":"t19","slug":"t19","date":"2018-05-08T05:29:31.000Z","updated":"2018-05-08T05:29:31.756Z","comments":true,"path":"2018/05/08/t19/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/t19/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"t18","slug":"t18","date":"2018-05-08T05:29:29.000Z","updated":"2018-05-08T05:29:29.118Z","comments":true,"path":"2018/05/08/t18/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/t18/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"t16","slug":"t16","date":"2018-05-08T05:28:52.000Z","updated":"2018-05-08T05:28:52.822Z","comments":true,"path":"2018/05/08/t16/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/t16/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"t15","slug":"t15","date":"2018-05-08T05:28:49.000Z","updated":"2018-05-08T05:28:49.405Z","comments":true,"path":"2018/05/08/t15/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/t15/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"t14","slug":"t14","date":"2018-05-08T05:28:46.000Z","updated":"2018-05-08T05:28:46.964Z","comments":true,"path":"2018/05/08/t14/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/t14/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"t13","slug":"t13","date":"2018-05-08T05:28:06.000Z","updated":"2018-05-08T05:28:06.813Z","comments":true,"path":"2018/05/08/t13/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/t13/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"t12","slug":"t12","date":"2018-05-08T05:28:03.000Z","updated":"2018-05-08T05:28:03.166Z","comments":true,"path":"2018/05/08/t12/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/t12/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"t11","slug":"t11","date":"2018-05-08T05:28:01.000Z","updated":"2018-05-08T05:28:01.045Z","comments":true,"path":"2018/05/08/t11/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/t11/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"t10","slug":"t10","date":"2018-05-08T05:27:58.000Z","updated":"2018-05-08T05:27:58.543Z","comments":true,"path":"2018/05/08/t10/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/t10/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"t9","slug":"t9","date":"2018-05-08T05:27:35.000Z","updated":"2018-05-08T05:27:35.775Z","comments":true,"path":"2018/05/08/t9/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/t9/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"t8","slug":"t8","date":"2018-05-08T05:27:32.000Z","updated":"2018-05-08T05:27:32.954Z","comments":true,"path":"2018/05/08/t8/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/t8/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"t7","slug":"t7","date":"2018-05-08T05:27:30.000Z","updated":"2018-05-08T05:27:30.352Z","comments":true,"path":"2018/05/08/t7/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/t7/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"t6","slug":"t6","date":"2018-05-08T05:27:27.000Z","updated":"2018-05-08T05:27:27.720Z","comments":true,"path":"2018/05/08/t6/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/t6/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"t5","slug":"t5","date":"2018-05-08T05:27:25.000Z","updated":"2018-05-08T05:27:25.155Z","comments":true,"path":"2018/05/08/t5/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/t5/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"t4","slug":"t4","date":"2018-05-08T05:27:22.000Z","updated":"2018-05-08T05:27:22.723Z","comments":true,"path":"2018/05/08/t4/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/t4/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"t3","slug":"t3","date":"2018-05-08T05:27:18.000Z","updated":"2018-05-08T05:27:18.039Z","comments":true,"path":"2018/05/08/t3/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/t3/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"t2","slug":"t2","date":"2018-05-08T05:27:14.000Z","updated":"2018-05-08T05:27:14.997Z","comments":true,"path":"2018/05/08/t2/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/t2/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"t1","slug":"t1","date":"2018-05-08T05:27:12.000Z","updated":"2018-05-08T05:27:12.158Z","comments":true,"path":"2018/05/08/t1/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/t1/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"lala","slug":"lala","date":"2018-05-08T02:36:39.000Z","updated":"2018-05-08T03:29:34.758Z","comments":true,"path":"2018/05/08/lala/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/lala/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"haha","slug":"haha","date":"2018-05-08T02:24:36.000Z","updated":"2018-05-08T03:36:02.588Z","comments":true,"path":"2018/05/08/haha/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/haha/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-05-08T02:17:37.745Z","updated":"2018-05-08T03:29:31.740Z","comments":true,"path":"2018/05/08/hello-world/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/08/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"hehe","slug":"hehe","date":"2018-05-07T09:39:50.000Z","updated":"2018-05-08T03:29:28.466Z","comments":true,"path":"2018/05/07/hehe/","link":"","permalink":"https://tomfriwel.github.io/hexotest/2018/05/07/hehe/","excerpt":"","text":"","categories":[],"tags":[]}]}